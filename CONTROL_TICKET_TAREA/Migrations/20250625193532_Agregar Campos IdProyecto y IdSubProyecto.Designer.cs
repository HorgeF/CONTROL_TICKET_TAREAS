// <auto-generated />
using System;
using CONTROL_TICKET_TAREA.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CONTROL_TICKET_TAREA.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250625193532_Agregar Campos IdProyecto y IdSubProyecto")]
    partial class AgregarCamposIdProyectoyIdSubProyecto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Dtos.Respuestas.TbControlTicketTareaResponse", b =>
                {
                    b.Property<int>("CantidadItems")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_ITEMS");

                    b.Property<string>("CodTicket")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("COD_TICKET");

                    b.Property<string>("Contacto")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CONTACTO");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CORREO");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<string>("Dni")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DNI");

                    b.Property<string>("Empresa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EMPRESA");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ESTADO");

                    b.Property<DateTime?>("FecCierre")
                        .HasColumnType("datetime2")
                        .HasColumnName("FEC_CIERRE");

                    b.Property<DateTime?>("FecReg")
                        .HasColumnType("datetime2")
                        .HasColumnName("FEC_REG");

                    b.Property<DateTime>("FechaTicketTarea")
                        .HasColumnType("datetime2")
                        .HasColumnName("FECHA_TICKET_TAREA");

                    b.Property<string>("GE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GE");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO");

                    b.Property<int>("IdGE")
                        .HasColumnType("int")
                        .HasColumnName("ID_GE");

                    b.Property<int>("IdItemCenter")
                        .HasColumnType("int")
                        .HasColumnName("ID_ITEM_CENTER");

                    b.Property<string>("IdItemCenterDesc")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ID_ITEM_CENTER_DESC");

                    b.Property<int>("IdMedio")
                        .HasColumnType("int")
                        .HasColumnName("ID_MEDIO");

                    b.Property<int?>("IdNivel")
                        .HasColumnType("int")
                        .HasColumnName("ID_NIVEL");

                    b.Property<int>("IdPrioridad")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRIORIDAD");

                    b.Property<int>("IdReceptor")
                        .HasColumnType("int")
                        .HasColumnName("ID_RECEPTOR");

                    b.Property<int>("IdTarea")
                        .HasColumnType("int")
                        .HasColumnName("ID_TAREA");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO");

                    b.Property<string>("Medio")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MEDIO");

                    b.Property<string>("NSerie")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("N_SERIE");

                    b.Property<string>("Nivel")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NIVEL");

                    b.Property<string>("Prioridad")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PRIORIDAD");

                    b.Property<string>("Receptor")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("RECEPTOR");

                    b.Property<string>("SiglaEmpresa")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIGLA_EMPRESA");

                    b.Property<string>("SiglaGE")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SIGLA_GE");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TIPO");

                    b.Property<string>("Whatsapp")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("WHATSAPP");

                    b.ToTable("TbControlTicketTareaResponses");
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Dtos.Respuestas.TicketResponse", b =>
                {
                    b.Property<string>("CORREL_SUP_EXTERNO")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CORREL_SUP_EXTERNO");

                    b.Property<int>("ID")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.ToTable("TicketResponses");
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.CenterTicket", b =>
                {
                    b.Property<int>("IdTicket")
                        .HasColumnType("int")
                        .HasColumnName("ID_TICKET");

                    b.Property<short?>("Autorizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("AUTORIZADO");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD");

                    b.Property<string>("CodRds")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_RDS");

                    b.Property<string>("CorrelCompletoExterno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_COMPLETO_EXTERNO");

                    b.Property<string>("CorrelEmp")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_EMP");

                    b.Property<string>("CorrelEmpFormato")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREL_EMP_FORMATO");

                    b.Property<string>("CorrelSupremoExterno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_SUPREMO_EXTERNO");

                    b.Property<string>("Correo")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CORREO");

                    b.Property<short?>("Defecto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0)
                        .HasColumnName("DEFECTO");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int?>("EstadoTicket")
                        .HasColumnType("int")
                        .HasColumnName("ESTADO_TICKET");

                    b.Property<DateTime?>("FecAct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_ACT")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FecReg")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REG")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_CIERRE");

                    b.Property<DateTime?>("FechaCorreo")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_CORREO");

                    b.Property<DateTime?>("FechaTicket")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_TICKET");

                    b.Property<int?>("Flag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("FLAG");

                    b.Property<int?>("FlagCorreo")
                        .HasColumnType("int")
                        .HasColumnName("FLAG_CORREO");

                    b.Property<string>("Formato")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("FORMATO");

                    b.Property<short?>("Habilitado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)1)
                        .HasColumnName("HABILITADO");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("ID_CATEGORIA");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<int?>("IdGe")
                        .HasColumnType("int")
                        .HasColumnName("ID_GE");

                    b.Property<int?>("IdMedioContacto")
                        .HasColumnType("int")
                        .HasColumnName("ID_MEDIO_CONTACTO");

                    b.Property<int?>("IdMotivo")
                        .HasColumnType("int")
                        .HasColumnName("ID_MOTIVO");

                    b.Property<int?>("IdNivel")
                        .HasColumnType("int")
                        .HasColumnName("ID_NIVEL");

                    b.Property<int?>("IdPrioridad")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRIORIDAD");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROYECTO");

                    b.Property<int?>("IdSite")
                        .HasColumnType("int")
                        .HasColumnName("ID_SITE");

                    b.Property<int?>("IdSubProyecto")
                        .HasColumnType("int")
                        .HasColumnName("ID_SUB_PROYECTO");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<int?>("IdWebExt")
                        .HasColumnType("int")
                        .HasColumnName("ID_WEB_EXT");

                    b.Property<string>("Img")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("IMG");

                    b.Property<string>("MensajeCierre")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("MENSAJE_CIERRE");

                    b.Property<string>("MensajeCorreo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("MENSAJE_CORREO");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRE");

                    b.Property<string>("NombreContacto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBRE_CONTACTO");

                    b.Property<string>("NumDoc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NUM_DOC");

                    b.Property<string>("OrdenEmp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ORDEN_EMP");

                    b.Property<string>("Serie")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("SERIE");

                    b.Property<string>("Sigla")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("Telefono")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TELEFONO");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("UBICACION");

                    b.Property<int?>("UsuAct")
                        .HasColumnType("int")
                        .HasColumnName("USU_ACT");

                    b.Property<int?>("UsuReg")
                        .HasColumnType("int")
                        .HasColumnName("USU_REG");

                    b.HasKey("IdTicket")
                        .HasName("PK__CENTER_T__129B4F22C870DE75");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("UsuAct");

                    b.HasIndex("UsuReg");

                    b.ToTable("CENTER_TICKET", null, t =>
                        {
                            t.HasTrigger("ENVIAR_TICKET_V1");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.General", b =>
                {
                    b.Property<int>("IdGeneral")
                        .HasColumnType("int")
                        .HasColumnName("ID_GENERAL");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD");

                    b.Property<int?>("Defecto")
                        .HasColumnType("int")
                        .HasColumnName("DEFECTO");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<DateTime?>("FecAct")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_ACT");

                    b.Property<DateTime?>("FecReg")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REG");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("FLAG");

                    b.Property<int?>("Flag2")
                        .HasColumnType("int")
                        .HasColumnName("FLAG_2");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<int?>("IdLista")
                        .HasColumnType("int")
                        .HasColumnName("ID_LISTA");

                    b.Property<string>("IdSecundaria")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ID_SECUNDARIA");

                    b.Property<int?>("Mostrar")
                        .HasColumnType("int")
                        .HasColumnName("MOSTRAR");

                    b.Property<string>("Nombre")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("NOMBRE");

                    b.Property<int?>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("ORDEN");

                    b.Property<string>("Sigla")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("SIGLA");

                    b.Property<int?>("UsuAct")
                        .HasColumnType("int")
                        .HasColumnName("USU_ACT");

                    b.Property<int?>("UsuReg")
                        .HasColumnType("int")
                        .HasColumnName("USU_REG");

                    b.HasKey("IdGeneral")
                        .HasName("PK__GENERAL__C1106EFEE07D0F8C");

                    b.ToTable("GENERAL", (string)null);
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.Gep1Grupoe", b =>
                {
                    b.Property<int>("IdGe")
                        .HasColumnType("int")
                        .HasColumnName("ID_GE");

                    b.Property<string>("CodAbrv")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("COD_ABRV");

                    b.Property<int?>("Defecto")
                        .HasColumnType("int")
                        .HasColumnName("DEFECTO");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("FLAG");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO");

                    b.Property<int?>("IdPais")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAIS");

                    b.Property<int?>("IdPersoneria")
                        .HasColumnType("int")
                        .HasColumnName("ID_PERSONERIA");

                    b.Property<int?>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO");

                    b.Property<int?>("IdTratamiento")
                        .HasColumnType("int")
                        .HasColumnName("ID_TRATAMIENTO");

                    b.Property<int?>("IndShow")
                        .HasColumnType("int")
                        .HasColumnName("IND_SHOW");

                    b.Property<string>("NomAbrv")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("NOM_ABRV");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRE");

                    b.Property<int?>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("ORDEN");

                    b.Property<string>("Sigla")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SIGLA");

                    b.HasKey("IdGe")
                        .HasName("PK__GEP_1_GR__8B62CF031B56F7A3");

                    b.ToTable("GEP_1_GRUPOE", (string)null);
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.Gep2Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<string>("CodAbrv")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("COD_ABRV");

                    b.Property<string>("CodDepartamento")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("COD_DEPARTAMENTO");

                    b.Property<string>("CodDistrito")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("COD_DISTRITO");

                    b.Property<string>("CodPais")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("COD_PAIS");

                    b.Property<string>("CodProvincia")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("COD_PROVINCIA");

                    b.Property<string>("CorrelConcatExterno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_CONCAT_EXTERNO");

                    b.Property<string>("CorrelGe")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_GE");

                    b.Property<int?>("Defecto")
                        .HasColumnType("int")
                        .HasColumnName("DEFECTO");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DIRECCION");

                    b.Property<DateTime?>("FecAct")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_ACT");

                    b.Property<DateTime?>("FecReg")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REG");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("FLAG");

                    b.Property<string>("Icono")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ICONO");

                    b.Property<int?>("IdColor")
                        .HasColumnType("int")
                        .HasColumnName("ID_COLOR");

                    b.Property<string>("IdDistrito")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("ID_DISTRITO");

                    b.Property<int?>("IdDocumento")
                        .HasColumnType("int")
                        .HasColumnName("ID_DOCUMENTO");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO");

                    b.Property<int?>("IdGe")
                        .HasColumnType("int")
                        .HasColumnName("ID_GE");

                    b.Property<int?>("IdPersoneria")
                        .HasColumnType("int")
                        .HasColumnName("ID_PERSONERIA");

                    b.Property<int?>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO");

                    b.Property<int?>("IdTratamiento")
                        .HasColumnType("int")
                        .HasColumnName("ID_TRATAMIENTO");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<int?>("IndShow")
                        .HasColumnType("int")
                        .HasColumnName("IND_SHOW");

                    b.Property<string>("Logo")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("LOGO");

                    b.Property<string>("NDoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("N_DOC");

                    b.Property<string>("NomAbrv")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("NOM_ABRV");

                    b.Property<int?>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("ORDEN");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RAZON_SOCIAL");

                    b.Property<string>("Saenet")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SAENET");

                    b.Property<string>("Sigla")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("Slogan")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("SLOGAN");

                    b.Property<int?>("UsuAct")
                        .HasColumnType("int")
                        .HasColumnName("USU_ACT");

                    b.Property<int?>("UsuReg")
                        .HasColumnType("int")
                        .HasColumnName("USU_REG");

                    b.Property<string>("Web")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("WEB");

                    b.HasKey("IdEmpresa")
                        .HasName("PK__GEP_2_EM__E30DF09C482F844C");

                    b.HasIndex("IdDocumento");

                    b.HasIndex("IdPersoneria");

                    b.HasIndex("IdTratamiento");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("UsuAct");

                    b.HasIndex("UsuReg");

                    b.ToTable("GEP_2_EMPRESA", (string)null);
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.ItemCenter", b =>
                {
                    b.Property<int>("IdItemCenter")
                        .HasColumnType("int")
                        .HasColumnName("ID_ITEM_CENTER");

                    b.Property<int?>("Canpartnumber")
                        .HasColumnType("int")
                        .HasColumnName("CANPARTNUMBER");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD");

                    b.Property<int?>("CantidadVdtSaenet")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_VDT_SAENET");

                    b.Property<string>("CodDvc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COD_DVC");

                    b.Property<string>("CodLog")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("char(5)")
                        .HasColumnName("COD_LOG")
                        .IsFixedLength();

                    b.Property<string>("CodProductoSae")
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("COD_PRODUCTO_SAE");

                    b.Property<string>("CorrelConcatExterno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_CONCAT_EXTERNO");

                    b.Property<string>("CorrelEmp")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_EMP");

                    b.Property<string>("CorrelSup")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_SUP");

                    b.Property<decimal?>("Costo")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("COSTO");

                    b.Property<decimal?>("CostoAdicional1")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("COSTO_ADICIONAL1");

                    b.Property<decimal?>("CostoAdicional2")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("COSTO_ADICIONAL2");

                    b.Property<decimal?>("CostoAdicional3")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("COSTO_ADICIONAL3");

                    b.Property<decimal?>("CostoAdicional4")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("COSTO_ADICIONAL4");

                    b.Property<decimal?>("CostoAdicional5")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("COSTO_ADICIONAL5");

                    b.Property<decimal?>("CostoBase")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("COSTO_BASE");

                    b.Property<decimal?>("CostoInicio")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("COSTO_INICIO");

                    b.Property<decimal?>("CostoOtros1")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("COSTO_OTROS_1");

                    b.Property<decimal?>("CostoOtros2")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("COSTO_OTROS_2");

                    b.Property<decimal?>("CostoTotal")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("COSTO_TOTAL");

                    b.Property<int?>("Defecto")
                        .HasColumnType("int")
                        .HasColumnName("DEFECTO");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(800)
                        .IsUnicode(false)
                        .HasColumnType("varchar(800)")
                        .HasColumnName("DESCRIPCION");

                    b.Property<string>("DescripcionCorta")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("DESCRIPCION_CORTA");

                    b.Property<DateTime?>("FecAct")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_ACT");

                    b.Property<DateTime?>("FecReg")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REG");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("FLAG");

                    b.Property<string>("GrupoCompra")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GRUPO_COMPRA");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("ID_CATEGORIA");

                    b.Property<int?>("IdClase")
                        .HasColumnType("int")
                        .HasColumnName("ID_CLASE");

                    b.Property<int?>("IdCt")
                        .HasColumnType("int")
                        .HasColumnName("ID_CT");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO");

                    b.Property<int?>("IdMarca")
                        .HasColumnType("int")
                        .HasColumnName("ID_MARCA");

                    b.Property<int?>("IdModelo")
                        .HasColumnType("int")
                        .HasColumnName("ID_MODELO");

                    b.Property<int?>("IdPadre")
                        .HasColumnType("int")
                        .HasColumnName("ID_PADRE");

                    b.Property<string>("IdRds")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ID_RDS");

                    b.Property<string>("IdRdsItem")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ID_RDS_ITEM");

                    b.Property<int?>("IdSubCategoria")
                        .HasColumnType("int")
                        .HasColumnName("ID_SUB_CATEGORIA");

                    b.Property<int?>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO");

                    b.Property<int?>("IdTipoCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_CLIENTE");

                    b.Property<decimal?>("Igv")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("IGV");

                    b.Property<int?>("IndInventario")
                        .HasColumnType("int")
                        .HasColumnName("IND_INVENTARIO");

                    b.Property<string>("Modelo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("MODELO");

                    b.Property<decimal?>("Mub")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("MUB");

                    b.Property<string>("NParte")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("N_PARTE");

                    b.Property<string>("NSerie")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("N_SERIE");

                    b.Property<string>("Necesidad")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NECESIDAD");

                    b.Property<int?>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("ORDEN");

                    b.Property<decimal?>("PrecioVenta")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("PRECIO_VENTA");

                    b.Property<string>("Rank")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RANK");

                    b.Property<string>("Requerimiento")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("REQUERIMIENTO");

                    b.Property<string>("Sigla")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("SubTipo1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("SUB_TIPO");

                    b.Property<string>("Subtipo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("SUBTIPO");

                    b.Property<string>("TipoConector")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPO_CONECTOR");

                    b.Property<string>("TipoEnchufe")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TIPO_ENCHUFE");

                    b.Property<int?>("TipoItem")
                        .HasColumnType("int")
                        .HasColumnName("TIPO_ITEM");

                    b.Property<int?>("UsuAct")
                        .HasColumnType("int")
                        .HasColumnName("USU_ACT");

                    b.Property<int?>("UsuReg")
                        .HasColumnType("int")
                        .HasColumnName("USU_REG");

                    b.HasKey("IdItemCenter")
                        .HasName("PK__ITEM_CEN__23CAA599E0FF6985");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("UsuAct");

                    b.HasIndex("UsuReg");

                    b.ToTable("ITEM_CENTER", (string)null);
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.TbControlTicketTarea", b =>
                {
                    b.Property<int>("IdTarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_TAREA");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTarea"));

                    b.Property<int>("CantidadItems")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDAD_ITEMS");

                    b.Property<string>("CodTicket")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("COD_TICKET");

                    b.Property<string>("Contacto")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CONTACTO");

                    b.Property<string>("CorrelConcatExterno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_CONCAT_EXTERNO");

                    b.Property<string>("CorrelEmp")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_EMP");

                    b.Property<string>("CorrelSup")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREL_SUP");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREO");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text")
                        .HasColumnName("DESCRIPCION");

                    b.Property<string>("Dni")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("DNI");

                    b.Property<DateTime?>("FecCierre")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_CIERRE");

                    b.Property<DateTime?>("FecReg")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REG");

                    b.Property<DateTime>("FechaTicketTarea")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHA_TICKET_TAREA");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("FLAG");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO");

                    b.Property<int>("IdGe")
                        .HasColumnType("int")
                        .HasColumnName("ID_GE");

                    b.Property<int>("IdItemCenter")
                        .HasColumnType("int")
                        .HasColumnName("ID_ITEM_CENTER");

                    b.Property<string>("IdItemCenterDesc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("ID_ITEM_CENTER_DESC");

                    b.Property<int>("IdMedio")
                        .HasColumnType("int")
                        .HasColumnName("ID_MEDIO");

                    b.Property<int?>("IdNivel")
                        .HasColumnType("int")
                        .HasColumnName("ID_NIVEL");

                    b.Property<int>("IdPrioridad")
                        .HasColumnType("int")
                        .HasColumnName("ID_PRIORIDAD");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROYECTO");

                    b.Property<int>("IdReceptor")
                        .HasColumnType("int")
                        .HasColumnName("ID_RECEPTOR");

                    b.Property<int?>("IdRef")
                        .HasColumnType("int")
                        .HasColumnName("ID_REF");

                    b.Property<int?>("IdSubProyecto")
                        .HasColumnType("int")
                        .HasColumnName("ID_SUB_PROYECTO");

                    b.Property<int>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO");

                    b.Property<string>("NSerie")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("N_SERIE");

                    b.Property<int?>("UsuAct")
                        .HasColumnType("int")
                        .HasColumnName("USU_ACT");

                    b.Property<int?>("UsuReg")
                        .HasColumnType("int")
                        .HasColumnName("USU_REG");

                    b.Property<string>("Whatsapp")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("WHATSAPP");

                    b.HasKey("IdTarea")
                        .HasName("PK__TB_CONTR__3484F0F9C46D185E");

                    b.ToTable("TB_CONTROL_TICKET_TAREA", null, t =>
                        {
                            t.HasTrigger("ENVIAR_TAREAS_V1");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("ID_USUARIO");

                    b.Property<string>("ApellidoM")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("APELLIDO_M");

                    b.Property<string>("ApellidoP")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("APELLIDO_P");

                    b.Property<string>("AreaDesc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("AREA_DESC");

                    b.Property<string>("CargoDesc")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CARGO_DESC");

                    b.Property<string>("Celular")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CELULAR");

                    b.Property<string>("Celular2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CELULAR_2");

                    b.Property<string>("Clave")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CLAVE");

                    b.Property<string>("ClaveEncode")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("CLAVE_ENCODE");

                    b.Property<string>("CodConfirm")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("COD_CONFIRM");

                    b.Property<string>("CodDepartamento")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("COD_DEPARTAMENTO");

                    b.Property<string>("CodDistrito")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("COD_DISTRITO");

                    b.Property<string>("CodPais")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("COD_PAIS");

                    b.Property<string>("CodProvincia")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("COD_PROVINCIA");

                    b.Property<string>("CodigoInterno")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CODIGO_INTERNO");

                    b.Property<string>("CorrelConcatExterno")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_CONCAT_EXTERNO");

                    b.Property<string>("CorrelEmp")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("CORREL_EMP");

                    b.Property<string>("CorrelSup")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREL_SUP");

                    b.Property<string>("Correo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CORREO");

                    b.Property<int?>("Defecto")
                        .HasColumnType("int")
                        .HasColumnName("DEFECTO");

                    b.Property<string>("Direccion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DIRECCION");

                    b.Property<string>("Dpto")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("DPTO");

                    b.Property<string>("Facebook")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FACEBOOK");

                    b.Property<DateTime?>("FecAct")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_ACT");

                    b.Property<DateTime?>("FecReg")
                        .HasColumnType("datetime")
                        .HasColumnName("FEC_REG");

                    b.Property<DateOnly?>("FechaNac")
                        .HasColumnType("date")
                        .HasColumnName("FECHA_NAC");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("FLAG");

                    b.Property<string>("Foto")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("FOTO");

                    b.Property<string>("Fotousu")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("FOTOUSU");

                    b.Property<int?>("IdArea")
                        .HasColumnType("int")
                        .HasColumnName("ID_AREA");

                    b.Property<int?>("IdArea2023")
                        .HasColumnType("int")
                        .HasColumnName("ID_AREA_2023");

                    b.Property<int?>("IdCargo")
                        .HasColumnType("int")
                        .HasColumnName("ID_CARGO");

                    b.Property<int?>("IdCargo2023")
                        .HasColumnType("int")
                        .HasColumnName("ID_CARGO_2023");

                    b.Property<string>("IdDistrito")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("ID_DISTRITO");

                    b.Property<int?>("IdDivision")
                        .HasColumnType("int")
                        .HasColumnName("ID_DIVISION");

                    b.Property<int?>("IdDocumento")
                        .HasColumnType("int")
                        .HasColumnName("ID_DOCUMENTO");

                    b.Property<string>("IdEmpleado")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ID_EMPLEADO");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int")
                        .HasColumnName("ID_EMPRESA");

                    b.Property<int?>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESTADO");

                    b.Property<int?>("IdGe")
                        .HasColumnType("int")
                        .HasColumnName("ID_GE");

                    b.Property<int?>("IdGenero")
                        .HasColumnType("int")
                        .HasColumnName("ID_GENERO");

                    b.Property<int?>("IdPersonal")
                        .HasColumnType("int")
                        .HasColumnName("ID_PERSONAL");

                    b.Property<int?>("IdPersoneria")
                        .HasColumnType("int")
                        .HasColumnName("ID_PERSONERIA");

                    b.Property<int?>("IdProyecto")
                        .HasColumnType("int")
                        .HasColumnName("ID_PROYECTO");

                    b.Property<int?>("IdSiteActual")
                        .HasColumnType("int")
                        .HasColumnName("ID_SITE_ACTUAL");

                    b.Property<int?>("IdSubProyectoActual")
                        .HasColumnType("int")
                        .HasColumnName("ID_SUB_PROYECTO_ACTUAL");

                    b.Property<int?>("IdTipo")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO");

                    b.Property<int?>("IdTipoEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_EMPLEADO");

                    b.Property<int?>("IdTipoUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_TIPO_USER");

                    b.Property<int?>("IdTratamiento")
                        .HasColumnType("int")
                        .HasColumnName("ID_TRATAMIENTO");

                    b.Property<int?>("IdUnidad")
                        .HasColumnType("int")
                        .HasColumnName("ID_UNIDAD");

                    b.Property<string>("ImgFirma")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("IndSupremo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("IND_SUPREMO");

                    b.Property<string>("Linkedin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LINKEDIN");

                    b.Property<string>("NDoc")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("N_DOC");

                    b.Property<string>("NombreCorto")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NOMBRE_CORTO");

                    b.Property<string>("Nombres")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("NOMBRES");

                    b.Property<int?>("Orden")
                        .HasColumnType("int")
                        .HasColumnName("ORDEN");

                    b.Property<string>("PasswordRecovery")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("PASSWORD_RECOVERY");

                    b.Property<string>("PhoneGuid")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("PHONE_GUID");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(75)
                        .IsUnicode(false)
                        .HasColumnType("varchar(75)")
                        .HasColumnName("RAZON_SOCIAL");

                    b.Property<string>("Referencia")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("REFERENCIA");

                    b.Property<string>("Ruc")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("RUC");

                    b.Property<string>("Saenet")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("SAENET");

                    b.Property<string>("Sigla")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)")
                        .HasColumnName("SIGLA");

                    b.Property<string>("Telefono")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("TELEFONO");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("TELEFONO_2");

                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USERNAME");

                    b.Property<int?>("UsuAct")
                        .HasColumnType("int")
                        .HasColumnName("USU_ACT");

                    b.Property<int?>("UsuReg")
                        .HasColumnType("int")
                        .HasColumnName("USU_REG");

                    b.HasKey("IdUsuario")
                        .HasName("PK__USUARIO__91136B904AEC533F");

                    b.ToTable("USUARIO", (string)null);
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.CenterTicket", b =>
                {
                    b.HasOne("CONTROL_TICKET_TAREA.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("CenterTicketIdUsuarioNavigations")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__CENTER_TI__ID_US__6AE5BEB7");

                    b.HasOne("CONTROL_TICKET_TAREA.Models.Usuario", "UsuActNavigation")
                        .WithMany("CenterTicketUsuActNavigations")
                        .HasForeignKey("UsuAct")
                        .HasConstraintName("FK__CENTER_TI__USU_A__0D3AD6BB");

                    b.HasOne("CONTROL_TICKET_TAREA.Models.Usuario", "UsuRegNavigation")
                        .WithMany("CenterTicketUsuRegNavigations")
                        .HasForeignKey("UsuReg")
                        .HasConstraintName("FK__CENTER_TI__USU_R__0E2EFAF4");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("UsuActNavigation");

                    b.Navigation("UsuRegNavigation");
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.Gep2Empresa", b =>
                {
                    b.HasOne("CONTROL_TICKET_TAREA.Models.General", "IdDocumentoNavigation")
                        .WithMany("Gep2EmpresaIdDocumentoNavigations")
                        .HasForeignKey("IdDocumento")
                        .HasConstraintName("FK_EMPRESA_GENERAL_DOCUMENTO");

                    b.HasOne("CONTROL_TICKET_TAREA.Models.General", "IdPersoneriaNavigation")
                        .WithMany("Gep2EmpresaIdPersoneriaNavigations")
                        .HasForeignKey("IdPersoneria")
                        .HasConstraintName("FK_EMPRESA_GENERAL_PERSONERIA");

                    b.HasOne("CONTROL_TICKET_TAREA.Models.General", "IdTratamientoNavigation")
                        .WithMany("Gep2EmpresaIdTratamientoNavigations")
                        .HasForeignKey("IdTratamiento")
                        .HasConstraintName("FK_EMPRESA_GENERAL_TRATAMIENTO");

                    b.HasOne("CONTROL_TICKET_TAREA.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Gep2EmpresaIdUsuarioNavigations")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_EMPRESA_USUARIO");

                    b.HasOne("CONTROL_TICKET_TAREA.Models.Usuario", "UsuActNavigation")
                        .WithMany("Gep2EmpresaUsuActNavigations")
                        .HasForeignKey("UsuAct")
                        .HasConstraintName("FK_EMPRESA_USUARIO_ACT");

                    b.HasOne("CONTROL_TICKET_TAREA.Models.Usuario", "UsuRegNavigation")
                        .WithMany("Gep2EmpresaUsuRegNavigations")
                        .HasForeignKey("UsuReg")
                        .HasConstraintName("FK_EMPRESA_USUARIO_REG");

                    b.Navigation("IdDocumentoNavigation");

                    b.Navigation("IdPersoneriaNavigation");

                    b.Navigation("IdTratamientoNavigation");

                    b.Navigation("IdUsuarioNavigation");

                    b.Navigation("UsuActNavigation");

                    b.Navigation("UsuRegNavigation");
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.ItemCenter", b =>
                {
                    b.HasOne("CONTROL_TICKET_TAREA.Models.Gep2Empresa", "IdEmpresaNavigation")
                        .WithMany("ItemCenters")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("FK_ITEM_CENTER_EMPRESA");

                    b.HasOne("CONTROL_TICKET_TAREA.Models.Usuario", "UsuActNavigation")
                        .WithMany("ItemCenterUsuActNavigations")
                        .HasForeignKey("UsuAct")
                        .HasConstraintName("FK__ITEM_CENT__USU_A__2141CF68");

                    b.HasOne("CONTROL_TICKET_TAREA.Models.Usuario", "UsuRegNavigation")
                        .WithMany("ItemCenterUsuRegNavigations")
                        .HasForeignKey("UsuReg")
                        .HasConstraintName("FK__ITEM_CENT__USU_R__2235F3A1");

                    b.Navigation("IdEmpresaNavigation");

                    b.Navigation("UsuActNavigation");

                    b.Navigation("UsuRegNavigation");
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.General", b =>
                {
                    b.Navigation("Gep2EmpresaIdDocumentoNavigations");

                    b.Navigation("Gep2EmpresaIdPersoneriaNavigations");

                    b.Navigation("Gep2EmpresaIdTratamientoNavigations");
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.Gep2Empresa", b =>
                {
                    b.Navigation("ItemCenters");
                });

            modelBuilder.Entity("CONTROL_TICKET_TAREA.Models.Usuario", b =>
                {
                    b.Navigation("CenterTicketIdUsuarioNavigations");

                    b.Navigation("CenterTicketUsuActNavigations");

                    b.Navigation("CenterTicketUsuRegNavigations");

                    b.Navigation("Gep2EmpresaIdUsuarioNavigations");

                    b.Navigation("Gep2EmpresaUsuActNavigations");

                    b.Navigation("Gep2EmpresaUsuRegNavigations");

                    b.Navigation("ItemCenterUsuActNavigations");

                    b.Navigation("ItemCenterUsuRegNavigations");
                });
#pragma warning restore 612, 618
        }
    }
}
